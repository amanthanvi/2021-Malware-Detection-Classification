# -*- coding: utf-8 -*-
"""NewModelClass.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WMIBj25y_3Ly1LaT3AXKf8BIVFLaaWt2
"""

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout, BatchNormalization


class My_Model():
    def __init__(self):
        model = Sequential()
        model.add(Dense(3, activation='relu', input_shape=(800000, 2381)))
        model.add(BatchNormalization())
        model.add(Dropout(0.5))

        model.add(Dense(3, activation='relu', input_shape=(800000, 2381)))
        model.add(BatchNormalization())
        model.add(Dropout(0.5))

        model.add(Dense(3, activation='relu', input_shape=(800000, 2381)))
        model.add(BatchNormalization())
        model.add(Dropout(0.5))

        model.add(Dense(3, activation='relu', input_shape=(800000, 2381)))
        model.add(BatchNormalization())
        model.add(Dropout(0.5))

        model.add(Dense(3, activation='relu', input_shape=(800000, 2381)))
        model.add(BatchNormalization())
        model.add(Dropout(0.5))

        model.add(Dense(3, activation='relu', input_shape=(800000, 2381)))
        model.add(BatchNormalization())
        model.add(Dropout(0.5))

        model.add(Dense(3, activation='relu', input_shape=(800000, 2381)))
        model.add(BatchNormalization())
        model.add(Dropout(0.5))

        model.add(Dense(3, activation='relu', input_shape=(800000, 2381)))
        model.add(BatchNormalization())
        model.add(Dropout(0.5))

        model.add(Dense(3, activation='relu', input_shape=(800000, 2381)))
        model.add(BatchNormalization())
        model.add(Dropout(0.5))

        model.add(Dense(3, activation='relu', input_shape=(800000, 2381)))
        model.add(BatchNormalization())
        model.add(Dropout(0.5))

        model.summary()
        model.compile(optimizer='adam',
                      loss='categorical_crossentropy',
                      metrics=['accuracy'])
